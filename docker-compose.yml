services:
  api-server:
    image: wjd5107/deepground-server:latest
    ports:
      - "8080:8080"
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/path=/api/v1/actuator/prometheus"
    env_file:
      - .env
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - monitoring
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    networks:
      - monitoring
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml
      - loki-data:/loki
    restart: unless-stopped
    command:
      - -config.file=/etc/loki/config.yaml

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    networks:
      - monitoring
    restart: unless-stopped
    environment:
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/config/
      - alertmanager-data:/data
    command:
      - '--config.file=/config/alertmanager.yml'
      - '--storage.path=/data'

  node-exporter:
    image: prom/node-exporter:v1.8.1
    container_name: node-exporter
    networks:
      - monitoring
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"

  promtail:
    image: grafana/promtail:3.4.1
    container_name: promtail
    networks:
      - monitoring
    restart: unless-stopped
    # [핵심] user와 privileged 설정
    user: root
    privileged: true
    volumes:
      # [중요] type: bind 명시적으로 지정
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/log
        target: /var/log
        read_only: true
      - type: bind
        source: ./promtail/promtail-config.yaml
        target: /etc/promtail/promtail-config.yaml
        read_only: true
      - type: bind
        source: ./promtail/positions
        target: /tmp
    command:
      - -config.file=/etc/promtail/promtail-config.yaml
      - -positions.file=/tmp/positions.yaml

networks:
  monitoring:
    driver: bridge

volumes:
  grafana-data:
  loki-data:
  alertmanager-data:
  prometheus-data: